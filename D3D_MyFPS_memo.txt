*** GPG Study(게임 프로그래밍 공부 사이트) 참조 ***

1. depth buffer가 제대로 작동하지 않는다(v)
-> projection matrix 생성 시, near plane의 값을 0.0f에서 1.0f(혹은 0.0f가 아닌 다른 값)으로 바꾸니 해결

2. 근데 이번엔 frustum culling이 제대로 작동하지 않는다
-> D3DXMatrixPerspectiveFovLH 함수의 결과 행렬을 살펴보면, 다음과 같다고 한다.
xScale  0       0         0
0    yScale     0         0
0     0     zf/(zf-zn)     1
0     0    -zn*zf/(zf-zn)  0
-> 여기서 zn이 0.0f에서 1.0f로 바뀌게 되면서 _43의 값이 0이 아니게 되었다. 이로 인한 차이인가?
--> frustum culling은 추후에, 프로그램 다 만들고나서 다시 해보는 걸로...
--> 일단 기능은 성공. 그런데 초근접에 위치한 타일의 경우 컬링되어 보이지 않는다. 컬링 기준 변화 필요

3. player가 flashlight를 비추는데, player 바로 코앞은 암흑인 상황(v)
-> 분명 light의 position은 player와 동일한데, 왜 코앞에는 빛이 없을까...
--> 모르겠다. 그냥 player를 머리 바로 위에서 비추는 spotlight를 하나 더 추가해서 해결해버림

4. 비스듬히 벽에 충돌 시, z축으로는 이동 되는데 x축으로는 벽에 막힌듯이 이동 불가한 현상(v)
-> 현재 충돌 검사 방식이, x축 확인 후 z축 확인이라 그런 듯하다.
--> 충돌 검사 과정을 갈아엎긴 귀찮으므로, 그냥 x축 이동 검사할 때, x축 진행 방향에 블록 없으면 위치 보정 안 되게 수정
--> 생각해보니, 충돌 검사 규칙을 다르게도 할 수 있을 것 같다.
{ (-x, -z), (-x, 0), (-x, +z), (0, -z), (0, +z), (+x, -z), (+x, 0), (+x, +z) }의 8방향으로만 이동이 진행되므로,
각각의 방향에 대해 3개 블록만 체크해보는 것도 가능할 것 같다.
ex)
123
4*5
678
(-x, -z) 이동이면 4, 6, 7번 블록에 대해서만 충돌 검사를 시행해도 된다.
--> 경우의 수를 8개로 나누기 때문에 코드 길이는 길어지지만 지금보다 좀 더 정확할지도?

5. 실제 fps게임처럼 마우스를 통한 화면전환 시도(v)
-> 윈도우 내에서는 가능한데, 밖으로 마우스가 벗어나면 불가
--> SetCapture함수로는 마우스 버튼을 클릭한 상태로 클라이언트 영역을 벗어나야 밖에서도 인식이 가능함
--> 검색해보니, DirectInput을 통해 이러한 한계점을 극복할 수 있다는데 찾아봐야할 듯.
https://blog.naver.com/hannip75/120202384067 << 참고해보자
https://blog.naver.com/winterwolfs/10171627611 << 로 해결
--> 매 순간 마우스 커서 위치를 윈도우 정중앙으로 이동하고, mousemove 시에 이동한 만큼 화면 전환 후 다시 정중앙 고정.
--> ShowCursor() 함수의 경우, CursorInfo라는 구조체에 카운트되는데,
이 카운터가 0 이상이면 커서가 표시되고 0 미만이면 표시되지 않는다.
ShowCursor(FALSE)를 호출할 시 -1, ShowCursor(TRUE)를 호출할 시 +1이 카운트된다. 

6. 클릭 시 총알(구체) 날아가는 이펙트
-> 날아가긴 하는데, 생각했던 것처럼 자연스럽지 않음
-> 여러 번 클릭 시, 따발총마냥 나가는 게 아니라 하나씩 발사되고 일정한 속도가 아니라 렉 걸린 것마냥 가속도 붙어서 발사
--> 총알 날아가는 거리 계산을 프레임 단위가 아닌 실제 흐르는 시간 기준으로 계산해 자연스럽게 만들어줌

-> 추가로, 실제 총 쏠때처럼 마우스 꾹 누르면 연발로 나가는 효과 만들어보기

7. FPS(FRAME)
--> 디바이스 설정: d3dpp.PresentationInterval 설정해야 디스플레이 정보에서 제한해 놓은 Hz 값을 넘을 수 있다?
--> https://m.cafe.daum.net/clang/HIYy/25?q=D_4gI5L5EgFJI0&
--> CPU에 따라 FPS 값의 변화 크다

-> 11/20 추가: 밤낮 간의 프레임 차이가 너무 크다(860 ~ 130) 이 간극을 줄일 수 있는 방법이 없을까??

8. XFile로 장애물 만들기(v)
-> 호랑이(Tiger.x)를 띄워봤는데 형태는 나오지만 텍스쳐가 이상하게 입혀져서 출력된다
--> Tiger.bmp 파일을 열어보고 회전시켰던 게 문제...앞으로 리소스 주어진 건 꼭 원형 그대로 유지하고 사용하도록 하자...

-> 호랑이가 갈림길에서 랜덤하게 방향 트는게 안됨
-> 회전 후, 통로 정중앙 방향보다 좀 더 틀어지게 되므로, 90도 회전시에 lookat 벡터 조정이 필요할듯
--> 왠진 잘 기억 안 나는데 해결은 됨

-> 호랑이 움직이는 동선이 일정함
-> 갈림길에서 랜덤 변수 뽑아낼 때 시드값이 변하지 않는 것 같음 수정 필요
--> 수정 완료. 시드값 랜덤하게 뽑아냄

9. Skybox 구현
-> 처음엔 box mesh를 만들어 해보려 했으나 실패
-> 그냥 면 6개를 만들어 texture를 입히는 방식으로 구현
--> 낮과 밤의 자연스러운 전환은 timegettime 활용해 배경색 채도 변환 시도?

10. 자유시점 구현
-> 자유시점은 했으나 화면을 위나 아래로 크게 돌릴 때 어색함. up vector 조정할 필요가 있음
--> up vector 조정이 아닌, 위아래로 화면 돌릴 수 있는 각도를 89도~-89까지만 가능하도록 해야겠다
(CNotice & CPlayer의 rotate에서 필요한, 두 벡터 사이의 angle구하는 함수를 FPS.h에 inline 구현)
--> 그냥 회전 메커니즘을 전반적으로 수정해야 할지도...
자유시점 상태에서 이리저리 돌리다보니 축이 틀어지는건지 회전이 이상해짐
--> 예전에 했던 것처럼 원점으로 translation 한 후 rotate하고 다시 원자리로 translation하는 과정을 안해서 그런듯

-> 자유시점 도중에 notice 무시가 안된다...!!! 뭐고
-> 자유시점 도중에 notice 회전이 이상해짐. 지혼자 돌아가고 palyer 안 바라보고 난리남
--> player move는 시간 제한 걸어서 실행되는 반면 noticeRotate 함수가 계속 실행되서 그런가?


-- 추가할 내용 --
1. FPS(FRAME) 조절하기: 컴퓨터 성능과 상관없이 일정하게 움직일 수 있도록
2. Frustum Culling 제대로 동작하도록 만들기
3. 셰이더 공부하고 가능하면 만들어보기*****
4. 게임 윤곽 잡기
-> 밤이 되면 호랑이 개체 수 증가(밤이 되었습니다. 호랑이들이 활동을 시작합니다. 등)
-> 탈출구가 임의의 위치에 랜덤한 시간 간격으로 일정 시간 동안만 스폰.
-> 탈출구 찾지 못하면 호랑이 잡아서 점수를 채우거나
-> 다음 탈출구 랜덤 위치에서 스폰되길 기다리기